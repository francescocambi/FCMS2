<?php

namespace DoctrineProxies\__CG__\Model;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Page extends \Model\Page implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'name', 'title', 'description', 'published', 'public', 'language', 'pageBlocks', 'accessGroups', 'pageUrls');
        }

        return array('__isInitialized__', 'id', 'name', 'title', 'description', 'published', 'public', 'language', 'pageBlocks', 'accessGroups', 'pageUrls');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Page $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setAccessGroups($accessGroups)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccessGroups', array($accessGroups));

        return parent::setAccessGroups($accessGroups);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccessGroups()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccessGroups', array());

        return parent::getAccessGroups();
    }

    /**
     * {@inheritDoc}
     */
    public function setPageBlocks($pageBlocks)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPageBlocks', array($pageBlocks));

        return parent::setPageBlocks($pageBlocks);
    }

    /**
     * {@inheritDoc}
     */
    public function getPageBlocks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageBlocks', array());

        return parent::getPageBlocks();
    }

    /**
     * {@inheritDoc}
     */
    public function getPageBlocksArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageBlocksArray', array());

        return parent::getPageBlocksArray();
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguage($language)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguage', array($language));

        return parent::setLanguage($language);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguage', array());

        return parent::getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublic($public)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublic', array($public));

        return parent::setPublic($public);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublic()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublic', array());

        return parent::getPublic();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublished($published)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublished', array($published));

        return parent::setPublished($published);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublished()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublished', array());

        return parent::getPublished();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setPageUrls($pageUrls)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPageUrls', array($pageUrls));

        return parent::setPageUrls($pageUrls);
    }

    /**
     * {@inheritDoc}
     */
    public function getPageUrls()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPageUrls', array());

        return parent::getPageUrls();
    }

    /**
     * {@inheritDoc}
     */
    public function isPublished()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPublished', array());

        return parent::isPublished();
    }

    /**
     * {@inheritDoc}
     */
    public function isPublic()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPublic', array());

        return parent::isPublic();
    }

    /**
     * {@inheritDoc}
     */
    public function addAccessGroup(\Model\AccessGroup $newGroup)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAccessGroup', array($newGroup));

        return parent::addAccessGroup($newGroup);
    }

    /**
     * {@inheritDoc}
     */
    public function canBeViewedBy(\Model\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'canBeViewedBy', array($user));

        return parent::canBeViewedBy($user);
    }

    /**
     * {@inheritDoc}
     */
    public function addPageBlock(\Model\PageBlock $pageBlock)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPageBlock', array($pageBlock));

        return parent::addPageBlock($pageBlock);
    }

    /**
     * {@inheritDoc}
     */
    public function addBlock($block, $blockOrder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBlock', array($block, $blockOrder));

        return parent::addBlock($block, $blockOrder);
    }

    /**
     * {@inheritDoc}
     */
    public function addUrl($url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUrl', array($url));

        return parent::addUrl($url);
    }

}
